<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-09-20T02:15:24 IST" name="Suite" finished-at="2024-09-20T02:15:53 IST" duration-ms="29147">
    <groups>
    </groups>
    <test started-at="2024-09-20T02:15:24 IST" name="Test" finished-at="2024-09-20T02:15:53 IST" duration-ms="29147">
      <class name="FrameWork.FrameWork.ErrorValidationTest">
        <test-method is-config="true" signature="launchapplication()[pri:0, instance:FrameWork.FrameWork.ErrorValidationTest@790da477]" started-at="2024-09-20T02:15:45 IST" name="launchapplication" finished-at="2024-09-20T02:15:47 IST" duration-ms="1440" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchapplication -->
        <test-method signature="LoginErrorValidation()[pri:0, instance:FrameWork.FrameWork.ErrorValidationTest@790da477]" started-at="2024-09-20T02:15:47 IST" name="LoginErrorValidation" finished-at="2024-09-20T02:15:47 IST" duration-ms="868" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email password.]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at FrameWork.FrameWork.ErrorValidationTest.LoginErrorValidation(ErrorValidationTest.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginErrorValidation -->
        <test-method is-config="true" signature="closebrowser()[pri:0, instance:FrameWork.FrameWork.ErrorValidationTest@790da477]" started-at="2024-09-20T02:15:48 IST" name="closebrowser" finished-at="2024-09-20T02:15:48 IST" duration-ms="88" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closebrowser -->
        <test-method is-config="true" signature="launchapplication()[pri:0, instance:FrameWork.FrameWork.ErrorValidationTest@790da477]" started-at="2024-09-20T02:15:48 IST" name="launchapplication" finished-at="2024-09-20T02:15:49 IST" duration-ms="1034" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchapplication -->
        <test-method signature="ProductErrorValidation()[pri:0, instance:FrameWork.FrameWork.ErrorValidationTest@790da477]" started-at="2024-09-20T02:15:49 IST" name="ProductErrorValidation" finished-at="2024-09-20T02:15:53 IST" duration-ms="4071" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProductErrorValidation -->
        <test-method is-config="true" signature="closebrowser()[pri:0, instance:FrameWork.FrameWork.ErrorValidationTest@790da477]" started-at="2024-09-20T02:15:53 IST" name="closebrowser" finished-at="2024-09-20T02:15:53 IST" duration-ms="134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closebrowser -->
      </class> <!-- FrameWork.FrameWork.ErrorValidationTest -->
      <class name="FrameWork.FrameWork.StandaloneTest2">
        <test-method is-config="true" signature="launchapplication()[pri:0, instance:FrameWork.FrameWork.StandaloneTest2@71075444]" started-at="2024-09-20T02:15:24 IST" name="launchapplication" finished-at="2024-09-20T02:15:27 IST" duration-ms="3046" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchapplication -->
        <test-method signature="StandAloneTest2(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:FrameWork.FrameWork.StandaloneTest2@71075444]" started-at="2024-09-20T02:15:27 IST" name="StandAloneTest2" data-provider="data" finished-at="2024-09-20T02:15:32 IST" duration-ms="5317" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[amruta@outlook.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Amruta@123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ZARA COAT 3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StandAloneTest2 -->
        <test-method is-config="true" signature="closebrowser()[pri:0, instance:FrameWork.FrameWork.StandaloneTest2@71075444]" started-at="2024-09-20T02:15:32 IST" name="closebrowser" finished-at="2024-09-20T02:15:32 IST" duration-ms="59" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closebrowser -->
        <test-method is-config="true" signature="launchapplication()[pri:0, instance:FrameWork.FrameWork.StandaloneTest2@71075444]" started-at="2024-09-20T02:15:32 IST" name="launchapplication" finished-at="2024-09-20T02:15:35 IST" duration-ms="2608" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchapplication -->
        <test-method signature="StandAloneTest2(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:FrameWork.FrameWork.StandaloneTest2@71075444]" started-at="2024-09-20T02:15:35 IST" name="StandAloneTest2" data-provider="data" finished-at="2024-09-20T02:15:41 IST" duration-ms="5827" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[VenkateshShetty@outlook.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Amruta@123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ADIDAS ORIGINAL]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StandAloneTest2 -->
        <test-method is-config="true" signature="closebrowser()[pri:0, instance:FrameWork.FrameWork.StandaloneTest2@71075444]" started-at="2024-09-20T02:15:41 IST" name="closebrowser" finished-at="2024-09-20T02:15:41 IST" duration-ms="148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closebrowser -->
        <test-method is-config="true" signature="launchapplication()[pri:0, instance:FrameWork.FrameWork.StandaloneTest2@71075444]" started-at="2024-09-20T02:15:41 IST" name="launchapplication" finished-at="2024-09-20T02:15:42 IST" duration-ms="1617" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchapplication -->
        <test-method signature="OrderHistoryTest()[pri:0, instance:FrameWork.FrameWork.StandaloneTest2@71075444]" started-at="2024-09-20T02:15:42 IST" name="OrderHistoryTest" finished-at="2024-09-20T02:15:45 IST" depends-on-methods="FrameWork.FrameWork.StandaloneTest2.StandAloneTest2" duration-ms="2452" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrderHistoryTest -->
        <test-method is-config="true" signature="closebrowser()[pri:0, instance:FrameWork.FrameWork.StandaloneTest2@71075444]" started-at="2024-09-20T02:15:45 IST" name="closebrowser" finished-at="2024-09-20T02:15:45 IST" duration-ms="193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closebrowser -->
      </class> <!-- FrameWork.FrameWork.StandaloneTest2 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
